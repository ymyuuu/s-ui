name: Docker Image CI
on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  frontend-build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: recursive
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies and build frontend
        run: |
          cd frontend
          npm install
          npm run build
      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

  build:
    needs: frontend-build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Download frontend build artifact
        uses: actions/download-artifact@v5
        with:
          name: frontend-dist
          path: frontend_dist

      # 仍可保留元数据（用于打标签/标签说明）；不会推送，只在导出的镜像里可见
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            alireza7/s-ui
            ghcr.io/alireza0/s-ui
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=pep440,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          buildkitd-flags: --debug

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 注意：不再登录任何镜像仓库（删除 login 到 Docker Hub / GHCR 的步骤）

      # 多架构构建并分别导出为 OCI tar（不推送）
      - name: Build multi-arch to OCI tars (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.frontend-artifact
          push: false
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          # 为每个架构分别导出一个 tar。若需要 Docker tar，将 type=oci 改成 type=docker
          outputs: |
            type=oci,dest=/tmp/image-amd64.oci.tar,platform=linux/amd64
            type=oci,dest=/tmp/image-arm64.oci.tar,platform=linux/arm64
            type=oci,dest=/tmp/image-armv7.oci.tar,platform=linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Upload multi-arch artifacts
        uses: actions/upload-artifact@v4
        with:
          name: images-oci
          path: |
            /tmp/image-amd64.oci.tar
            /tmp/image-arm64.oci.tar
            /tmp/image-armv7.oci.tar
